package com.bll.lnkwrite.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.bll.lnkwrite.mvp.model.AppBean;
import com.bll.lnkwrite.mvp.model.CalenderItemBean;
import com.bll.lnkwrite.mvp.model.DiaryBean;
import com.bll.lnkwrite.mvp.model.FreeNoteBean;
import com.bll.lnkwrite.mvp.model.ItemTypeBean;
import com.bll.lnkwrite.mvp.model.Note;
import com.bll.lnkwrite.mvp.model.NoteContentBean;
import com.bll.lnkwrite.mvp.model.PaintingContentBean;
import com.bll.lnkwrite.mvp.model.WallpaperBean;
import com.bll.lnkwrite.mvp.model.book.Book;
import com.bll.lnkwrite.mvp.model.book.TextbookBean;

import com.bll.lnkwrite.greendao.AppBeanDao;
import com.bll.lnkwrite.greendao.CalenderItemBeanDao;
import com.bll.lnkwrite.greendao.DiaryBeanDao;
import com.bll.lnkwrite.greendao.FreeNoteBeanDao;
import com.bll.lnkwrite.greendao.ItemTypeBeanDao;
import com.bll.lnkwrite.greendao.NoteDao;
import com.bll.lnkwrite.greendao.NoteContentBeanDao;
import com.bll.lnkwrite.greendao.PaintingContentBeanDao;
import com.bll.lnkwrite.greendao.WallpaperBeanDao;
import com.bll.lnkwrite.greendao.BookDao;
import com.bll.lnkwrite.greendao.TextbookBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig appBeanDaoConfig;
    private final DaoConfig calenderItemBeanDaoConfig;
    private final DaoConfig diaryBeanDaoConfig;
    private final DaoConfig freeNoteBeanDaoConfig;
    private final DaoConfig itemTypeBeanDaoConfig;
    private final DaoConfig noteDaoConfig;
    private final DaoConfig noteContentBeanDaoConfig;
    private final DaoConfig paintingContentBeanDaoConfig;
    private final DaoConfig wallpaperBeanDaoConfig;
    private final DaoConfig bookDaoConfig;
    private final DaoConfig textbookBeanDaoConfig;

    private final AppBeanDao appBeanDao;
    private final CalenderItemBeanDao calenderItemBeanDao;
    private final DiaryBeanDao diaryBeanDao;
    private final FreeNoteBeanDao freeNoteBeanDao;
    private final ItemTypeBeanDao itemTypeBeanDao;
    private final NoteDao noteDao;
    private final NoteContentBeanDao noteContentBeanDao;
    private final PaintingContentBeanDao paintingContentBeanDao;
    private final WallpaperBeanDao wallpaperBeanDao;
    private final BookDao bookDao;
    private final TextbookBeanDao textbookBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        appBeanDaoConfig = daoConfigMap.get(AppBeanDao.class).clone();
        appBeanDaoConfig.initIdentityScope(type);

        calenderItemBeanDaoConfig = daoConfigMap.get(CalenderItemBeanDao.class).clone();
        calenderItemBeanDaoConfig.initIdentityScope(type);

        diaryBeanDaoConfig = daoConfigMap.get(DiaryBeanDao.class).clone();
        diaryBeanDaoConfig.initIdentityScope(type);

        freeNoteBeanDaoConfig = daoConfigMap.get(FreeNoteBeanDao.class).clone();
        freeNoteBeanDaoConfig.initIdentityScope(type);

        itemTypeBeanDaoConfig = daoConfigMap.get(ItemTypeBeanDao.class).clone();
        itemTypeBeanDaoConfig.initIdentityScope(type);

        noteDaoConfig = daoConfigMap.get(NoteDao.class).clone();
        noteDaoConfig.initIdentityScope(type);

        noteContentBeanDaoConfig = daoConfigMap.get(NoteContentBeanDao.class).clone();
        noteContentBeanDaoConfig.initIdentityScope(type);

        paintingContentBeanDaoConfig = daoConfigMap.get(PaintingContentBeanDao.class).clone();
        paintingContentBeanDaoConfig.initIdentityScope(type);

        wallpaperBeanDaoConfig = daoConfigMap.get(WallpaperBeanDao.class).clone();
        wallpaperBeanDaoConfig.initIdentityScope(type);

        bookDaoConfig = daoConfigMap.get(BookDao.class).clone();
        bookDaoConfig.initIdentityScope(type);

        textbookBeanDaoConfig = daoConfigMap.get(TextbookBeanDao.class).clone();
        textbookBeanDaoConfig.initIdentityScope(type);

        appBeanDao = new AppBeanDao(appBeanDaoConfig, this);
        calenderItemBeanDao = new CalenderItemBeanDao(calenderItemBeanDaoConfig, this);
        diaryBeanDao = new DiaryBeanDao(diaryBeanDaoConfig, this);
        freeNoteBeanDao = new FreeNoteBeanDao(freeNoteBeanDaoConfig, this);
        itemTypeBeanDao = new ItemTypeBeanDao(itemTypeBeanDaoConfig, this);
        noteDao = new NoteDao(noteDaoConfig, this);
        noteContentBeanDao = new NoteContentBeanDao(noteContentBeanDaoConfig, this);
        paintingContentBeanDao = new PaintingContentBeanDao(paintingContentBeanDaoConfig, this);
        wallpaperBeanDao = new WallpaperBeanDao(wallpaperBeanDaoConfig, this);
        bookDao = new BookDao(bookDaoConfig, this);
        textbookBeanDao = new TextbookBeanDao(textbookBeanDaoConfig, this);

        registerDao(AppBean.class, appBeanDao);
        registerDao(CalenderItemBean.class, calenderItemBeanDao);
        registerDao(DiaryBean.class, diaryBeanDao);
        registerDao(FreeNoteBean.class, freeNoteBeanDao);
        registerDao(ItemTypeBean.class, itemTypeBeanDao);
        registerDao(Note.class, noteDao);
        registerDao(NoteContentBean.class, noteContentBeanDao);
        registerDao(PaintingContentBean.class, paintingContentBeanDao);
        registerDao(WallpaperBean.class, wallpaperBeanDao);
        registerDao(Book.class, bookDao);
        registerDao(TextbookBean.class, textbookBeanDao);
    }
    
    public void clear() {
        appBeanDaoConfig.clearIdentityScope();
        calenderItemBeanDaoConfig.clearIdentityScope();
        diaryBeanDaoConfig.clearIdentityScope();
        freeNoteBeanDaoConfig.clearIdentityScope();
        itemTypeBeanDaoConfig.clearIdentityScope();
        noteDaoConfig.clearIdentityScope();
        noteContentBeanDaoConfig.clearIdentityScope();
        paintingContentBeanDaoConfig.clearIdentityScope();
        wallpaperBeanDaoConfig.clearIdentityScope();
        bookDaoConfig.clearIdentityScope();
        textbookBeanDaoConfig.clearIdentityScope();
    }

    public AppBeanDao getAppBeanDao() {
        return appBeanDao;
    }

    public CalenderItemBeanDao getCalenderItemBeanDao() {
        return calenderItemBeanDao;
    }

    public DiaryBeanDao getDiaryBeanDao() {
        return diaryBeanDao;
    }

    public FreeNoteBeanDao getFreeNoteBeanDao() {
        return freeNoteBeanDao;
    }

    public ItemTypeBeanDao getItemTypeBeanDao() {
        return itemTypeBeanDao;
    }

    public NoteDao getNoteDao() {
        return noteDao;
    }

    public NoteContentBeanDao getNoteContentBeanDao() {
        return noteContentBeanDao;
    }

    public PaintingContentBeanDao getPaintingContentBeanDao() {
        return paintingContentBeanDao;
    }

    public WallpaperBeanDao getWallpaperBeanDao() {
        return wallpaperBeanDao;
    }

    public BookDao getBookDao() {
        return bookDao;
    }

    public TextbookBeanDao getTextbookBeanDao() {
        return textbookBeanDao;
    }

}
